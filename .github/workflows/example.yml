name: github-actions-example

on: 
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.REGISTRY_URL }}
  APP_NAME: github-actions-psisss
  RESOURCE_GROUP: devops-lab-rg-psisss

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Execute Maven verify phase 
        run: mvn --batch-mode --update-snapshots verify
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: '${{ github.workspace }}/target/*.jar'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      webapp_url: ${{ steps.deploy_webapp.outputs.webapp_url }}
    steps:
      - uses: actions/checkout@v3
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: Package
          path: target/
      - name: Login to Azure
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Docker Build and Push
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}
      - name: Configure Web App Container
        uses: azure/CLI@v1
        with: 
          inlineScript: |
            az webapp config container set \
              --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }} \
              --docker-registry-server-url ${{ env.REGISTRY }} \
              --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }}        
      - name: Deploy to Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          images: ${{ env.REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}
      - run: |        
          $webAppUrl = $(az webapp show `
            --resource-group ${{ env.RESOURCE_GROUP }} `
            --name ${{ env.APP_NAME }} `
            --query 'defaultHostName' `
            --output tsv)

          echo "::set-output name=webapp_url::$webAppUrl"
        id: deploy_webapp
        shell: pwsh
      - name: Logout from Azure
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
  
  # This is a sample on how to call resusable workflow
  call_reusable_workflow:
    needs: deploy
    uses: ./.github/workflows/sample-reusable-workflow.yml
    with:
      username: ${{ github.actor }}
      webAppUrl: ${{ needs.deploy.outputs.webapp_url }}
    secrets: 
      envPAT: ${{ secrets.GITHUB_TOKEN }}

  print_output_from_reusable_workflow:    
    runs-on: ubuntu-latest
    needs: call_reusable_workflow
    steps:
      - run: echo ${{ needs.call_reusable_workflow.outputs.message }}
